apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openblocks.fullname" . }}-backend
  labels:
    {{- include "openblocks.labels" . | nindent 4 }}
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "openblocks.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "openblocks.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openblocks.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.mongodb.enabled }}
      initContainers:
        - name: {{ .Chart.Name }}-wait-for-mongo
          image: curlimages/curl:7.87.0
          command:
            - /bin/sh
          args:
            - -ec
            - |
              echo "Wait for mongo database to be ready"
              while [[ $(curl --connect-timeout 2 -sw '%{http_code}' 'http://{{ .Values.mongodb.service.nameOverride }}:27017' -o /dev/null) -ne 200 ]]; do 
                 sleep 1; 
                 echo '  still waiting...';
              done; 
              echo 'Connection with MongoDB established.'
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "openblocks.fullname" . }}-backend
            - secretRef:
                name: {{ include "openblocks.fullname" . }}-backend
          ports:
            - name: openblocks-api
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: {{ .Values.ingress.contextPath | default "" | trimSuffix "/" }}/actuator/health
              port: openblocks-api
          readinessProbe:
            initialDelaySeconds: 30
            httpGet:
              path: {{ .Values.ingress.contextPath | default "" | trimSuffix "/" }}/actuator/health
              port: openblocks-api
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
